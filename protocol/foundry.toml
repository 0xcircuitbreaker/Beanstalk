[profile.default]
# Project
# https://book.getfoundry.sh/reference/config/project
src = 'contracts'
test = 'test'
no_match_test = "testDiff"
out = 'out'
libs = [
  'node_modules',
  'lib'
]
cache = true
cache_path = 'cache'
force = false

# Compiler
# https://book.getfoundry.sh/reference/config/solidity-compiler
libraries = []
auto_detect_solc = true

# 2462: Visibility for constructor is ignored
ignored_error_codes = [2462]
# set optimizer to true when deploying to mainnet
optimizer = false
optimizer_runs = 200
via_ir = false
bytecode_hash = 'ipfs'

# Testing
# https://book.getfoundry.sh/reference/config/testing
verbosity = 0
ffi = true
fs_permissions = [
  { access = "read", path = "../"},
  { access = "read", path = "./out" }
]
ignored_warnings_from = [
  "test",
  "contracts/interfaces/IMockFBeanstalk.sol",
  "contracts/mocks/"
]
gas_reports = ['*']
 # Cache to `$HOME/.foundry/cache/<chain id>/<block number>`.
no_storage_caching = false
 
[profile.differential]
match_test = "testDiff"
no_match_test = "a^"

[profile.default.rpc_storage_caching]
chains = 'all'
endpoints = 'all'

[rpc_endpoints]
mainnet = "${FORKING_RPC}" 

# Formatter
# https://book.getfoundry.sh/reference/config/formatter
[fmt]
# Maximum line length where formatter will try to wrap the line
line_length = 120
# Number of spaces per indentation level
tab_width = 4
# Print spaces between brackets
bracket_spacing = false
# Style of uint/int256 types
int_types = "long"
# If function parameters are multiline then always put the function attributes on separate lines
func_attrs_with_params_multiline = true
# Style of quotation marks
quote_style = "double"
# Style of underscores in number literals
number_underscore = "thousands"
# Controls whether statement blocks will be formatted to a single line or multiple lines
single_line_statement_blocks = "preserve"
# How function headers are formatted when they exceed the max line length
multiline_func_header = "params_first"
# Alphabetically sort import while preserving groups
sort_imports = true
